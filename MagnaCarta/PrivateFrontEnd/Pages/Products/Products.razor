@page "/Products"
@using SharedDomain.Data
@using SharedDomain.Entities
@using SharedDomain.Services

<PageTitle>Productos</PageTitle>

@inject IProductsService ProductsService

<h1>Gestión de productos</h1>

<a class="btn btn-primary" href="Products/New">Crear</a>

@if (_products == null)
{
    <p>
        <em>Cargando...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Nombre</th>
            <th>Precio</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var product in _products)
        {
            <tr>
                <td>@product.Name</td>
                <td>@product.Price</td>
                <td>
                    <a class="btn btn-primary" href="/Products/@product.Id">Editar</a>
                    <button class="btn btn-danger" onclick=@(() => Delete(@product.Id))>Borrar</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private IReadOnlyCollection<Product>? _products;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    
    private async Task Delete(int id)
    {
        await ProductsService.DeleteProduct(id);
        await LoadData();
    }

    private async Task LoadData()
    {
        _products = await ProductsService.GetAllProducts();
        StateHasChanged();
    }
}
